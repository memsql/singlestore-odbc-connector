name: Run tests

on:
  push:
    # Run on all branches TODO
    branches: ["**"]
  pull_request:
    # Run on all branches
    branches: ["main", "master"]
  schedule:
    - cron: '0 0 * * 1' # Weekly build, as in CircleCI 'weekly' workflow

jobs:
  build-linux:
    name: Build & Test (Linux)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [RelWithDebInfo]
        driver_type: [unicode, ansi]
        include:
          - build_type: RelWithDebInfo
            driver_type: unicode
            test_dsn: ssodbc_test_w
            test_driver: 'SingleStore ODBC Unicode Driver'
          - build_type: RelWithDebInfo
            driver_type: ansi
            test_dsn: ssodbc_test_a
            test_driver: 'SingleStore ODBC ANSI Driver'
    env:
      BUILD_TYPE: ${{ matrix.build_type }}
      TEST_DSN: ${{ matrix.test_dsn }}
      TEST_DRIVER: ${{ matrix.test_driver }}
      S2MS_API_KEY: ${{ secrets.S2MS_API_KEY }}
      SINGLESTORE_LICENSE: ${{ secrets.SINGLESTORE_LICENSE }}
      ROOT_PASSWORD: ${{ secrets.SINGLESTORE_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake gcc g++ libglib2.0 libsecret-1-dev libkrb5-dev unixodbc unixodbc-dev odbcinst libodbc2
      - name: Setup test cluster
        run: ./.github/scripts/setup-cluster.sh
      - name: Build project
        run:  ./.github/scripts/build-ubuntu.sh
      - name: Run tests
        run: ./.github/scripts/run-tests-linux.sh
      - name: Run browser auth tests
        run: ./test/odbc_browser_auth

  build-macos:
    name: Build & Test (macOS)
    runs-on: macos-latest
    strategy:
      matrix:
        build_type: [RelWithDebInfo]
        driver_type: [unicode, ansi]
        include:
          - build_type: RelWithDebInfo
            driver_type: unicode
            test_dsn: ssodbc_test_w
            driver_name: 'SingleStore ODBC Unicode Driver'
          - build_type: RelWithDebInfo
            driver_type: ansi
            test_dsn: ssodbc_test_a
            driver_name: 'SingleStore ODBC ANSI Driver'
    env:
      BUILD_TYPE: ${{ matrix.build_type }}
      TEST_DSN: ${{ matrix.test_dsn }}
      DRIVER_NAME: ${{ matrix.driver_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Start S2MS cluster
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          python -m pip install singlestoredb
          python ./.github/scripts/setup_s2ms_cluster.py start odbc_test
      - name: Define Environment Variables
        run: |
            echo 'export TEST_SERVER=$(echo "$(cat WORKSPACE_ENDPOINT_FILE)")' >> $BASH_ENV
            echo 'export TEST_DRIVER=$DRIVER_NAME' >> $BASH_ENV
            echo 'export TEST_UID=$MEMSQL_USER' >> $BASH_ENV
            echo 'export TEST_PORT=$MEMSQL_PORT' >> $BASH_ENV
            echo 'export TEST_PASSWORD=$MEMSQL_PASSWORD' >> $BASH_ENV
            source $BASH_ENV
      - name: Setup Environment on MacOS
        run: |
            rm -rf $(brew --caskroom)/adoptopenjdk11
            brew update
            brew install openssl curl mysql-client cmake bind
            brew install libiodbc
            brew link libiodbc --force
            brew cleanup
      - name: Build project
        run: ./.github/scripts/build-osx.sh
      - name: Run tests
        run: ./.github/scripts/run-tests-osx.sh
      - name: Run browser auth tests
        run: ./test/odbc_browser_auth
      - name: Terminate S2MS cluster
        if: always()
        run: |
            source .venv/bin/activate
            python -m pip install singlestoredb
            python ./.github/scripts/setup_s2ms_cluster.py terminate

  build-windows:
    name: Build & Test (Windows)
    runs-on: windows-latest
    strategy:
      matrix:
        build_type: [RelWithDebInfo]
        driver_type: [unicode, ansi]
        arch_bits: [64]
        include:
          - build_type: RelWithDebInfo
            driver_type: unicode
            arch_bits: 64
            test_dsn: ssodbc_test_w
            test_driver: 'SingleStore ODBC Unicode Driver'
          - build_type: RelWithDebInfo
            driver_type: ansi
            arch_bits: 64
            test_dsn: ssodbc_test_a
            test_driver: 'SingleStore ODBC ANSI Driver'
    env:
      BUILD_TYPE: ${{ matrix.build_type }}
      TEST_DSN: ${{ matrix.test_dsn }}
      TEST_DRIVER: ${{ matrix.test_driver }}
      DRIVER_TYPE: ${{ matrix.driver_type }}
      ARCH_BITS: ${{ matrix.arch_bits }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      # - name: Download CMake
      #   run: |
      #     $ProgressPreference = "SilentlyContinue"
      #     Invoke-WebRequest -URI https://github.com/Kitware/CMake/releases/download/v3.19.0/cmake-3.19.0-win64-x64.zip -OutFile $Env:HOMEPATH\cmake-3.19.0-win64-x64.zip
      #     Expand-Archive $Env:HOMEPATH\cmake-3.19.0-win64-x64.zip -DestinationPath "$Env:ProgramFiles"
      #     Rename-Item "$Env:ProgramFiles\cmake-3.19.0-win64-x64" -NewName CMake
      #     Install-WindowsFeature Net-Framework-Core
      - name: Start S2MS cluster
        run: |
            python3 -m venv .venv
            source .venv\bin\activate
            python -m pip install singlestoredb
            python .github\scripts\setup_s2ms_cluster.py start odbc_test
      - name: Build project
        run: .github\scripts\build-windows.ps1
      - name: Run tests
        run: .github\scripts\run-tests-windows.ps1
      - name: Run browser auth tests
        run: |
            cd ./${{ matrix.build_type }}
            ../test/${{ matrix.build_type }}/odbc_browser_auth
            cd ..
      - name: Terminate S2MS cluster
        run: |
            source .venv\bin\activate
            python -m pip install singlestoredb
            python .\.github\scripts\setup_s2ms_cluster.py terminate
        if: always()
